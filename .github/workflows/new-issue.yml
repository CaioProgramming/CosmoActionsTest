name: Implement new Issue
on:
    issues:
        types: [opened, labeled]
jobs:
  validate-issue:
    runs-on: ubuntu-latest
    outputs:
      next-job-tag: ${{ steps.validate-issue.outputs.next-job-tag }}
    steps:
      - name: Checking Issue Labels
        id: validate-issue
        run: |
          LABELS_JSON='${{ toJson(github.event.issue.labels) }}'
          FIRST_LABEL=$(echo "$LABELS_JSON" | jq -r '.[0].name')
          echo "First label: $FIRST_LABEL"
          echo "::set-output name=next-job-tag::$FIRST_LABEL"
        shell: bash
  include-news:
    runs-on: ubuntu-latest
    needs: validate-issue
    outputs:
      pull-request-url: ${{ steps.run-news.outputs.pull-request-url }}
    if: ${{ needs.setup-workflow.outputs.next-job-tag == 'news' }}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Setup Git User
      run: |
        git config --global user.name 'news-action[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    - name: Download kotlin
      uses: fwilhe2/setup-kotlin@main
      with:
        version: 1.9.22
    - name: Setup Enablers
      run: |
        chmod u+r+x .github/workflows/scripts/dependency-resolver.sh
        chmod u+r+x .github/workflows/scripts/get-dependency.sh    
    - name: Run News Action
      id: run-news  
      uses: ./.github/workflows/actions/add-news-action/
      with:
        issue-number: ${{ github.event.issue.number }}
        issue-body: ${{ github.event.issue.body }}
        issue-title: ${{ github.event.issue.title }}
        secret-token: ${{ secrets.GITHUB_TOKEN }}    
    - name: Comment Issue
      uses: alexrogalskiy/github-action-issue-commenter@master
      with:
        message: '[Pull Request](${{ github.server_url }}/${{ github.repository }}/issues/${{ inputs.issue-number }}) created for this issue'
        requestId: ${{ github.event.issue.number }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                